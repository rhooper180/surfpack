# Load data from files

# Load AxesBounds from files 
AxesBounds[name = t2d_train, file = '../axes_bounds/2d_v25_m1to1x2.axb']
AxesBounds[name = t2d_test, 
  file = '../axes_bounds/2d_test_v50_m.95to.95x2.axb']

# Generate data from AxesBounds using test functions
MonteCarloSample[name = multi_002_0000625_mcl, def = t2d_train,
  		 test_function = 'rastrigin', test_function = 'rosenbrock', 
  		 test_function = 'quasisine', test_function = 'sphere']
MonteCarloSample[name = test_multi_002_0002500_mcl, def = t2d_test,
  		 test_function = 'rastrigin', test_function = 'rosenbrock', 
  		 test_function = 'quasisine', test_function = 'sphere']

# Load surfaces from files

# Create surfaces using existing data sets
CreateSurface[name = mars_rstgn, data = multi_002_0000625_mcl, type = 'Mars', 
	      response_index = 0]
CreateSurface[name = mars_rosen, data = multi_002_0000625_mcl, type = 'Mars', 
	      response_index = 1]
CreateSurface[name = mars_qsisn, data = multi_002_0000625_mcl, type = 'Mars', 
	      response_index = 2]
CreateSurface[name = mars_spher, data = multi_002_0000625_mcl, type = 'Mars', 
	      response_index = 3]

# Evaluate surfaces 
Evaluate[surface = mars_rstgn, input_data = test_multi_002_0002500_mcl] 
Evaluate[surface = mars_rosen, input_data = test_multi_002_0002500_mcl] 
Evaluate[surface = mars_qsisn, input_data = test_multi_002_0002500_mcl] 
Evaluate[surface = mars_spher, input_data = test_multi_002_0002500_mcl] 

# Compute surface fitness metrics
Fitness[surface = mars_rstgn, data = test_multi_002_0002500_mcl,
	response_index = 0, metric = 'max_scaled']
Fitness[surface = mars_rosen, data = test_multi_002_0002500_mcl,
	response_index = 1, metric = 'max_scaled']
Fitness[surface = mars_qsisn, data = test_multi_002_0002500_mcl,
	response_index = 2, metric = 'max_scaled']
Fitness[surface = mars_spher, data = test_multi_002_0002500_mcl,
	response_index = 3, metric = 'max_scaled']
# Save data to file
SaveData[data = test_multi_002_0002500_mcl, 
  file = '../tmp_data/test_multi_002_0002500_mcl.txt']

# Save surfaces to file
SaveSurface[surface = mars_rstgn, file = '../tmp_surf/test002_mars_rstgn.txt']
SaveSurface[surface = mars_rosen, file = '../tmp_surf/test002_mars_rosen.txt']
SaveSurface[surface = mars_qsisn, file = '../tmp_surf/test002_mars_qsisn.txt']
SaveSurface[surface = mars_spher, file = '../tmp_surf/test002_mars_spher.txt']



